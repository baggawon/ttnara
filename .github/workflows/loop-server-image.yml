name: Crawling Server Docker Image CI

on:
  push:
    branches: ["loop_server"]
    tags: ["*"]

env:
  # github.repository as <account>/<repo>
  IMAGE_NAME: |
    ${{ secrets.DOCKER_USERNAME }}/baggawon602
  CARGO_TERM_COLOR: always
  RUSTC_WRAPPER: sccache
  PROJECT_DIR: "loop_server"
  PROJECT_NAME: "loop_server"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Replace text in env
        run: |
          echo "PROJECT_NAME_SLASH=${PROJECT_NAME/_/-}" >> $GITHUB_ENV

      - name: Check out repository code üõéÔ∏è
        uses: actions/checkout@v4

      - name: Setup sccache
        uses: mozilla-actions/sccache-action@v0.0.3

      # Rust Ï∫êÏãú ÏÑ§Ï†ï
      - name: Cache Rust Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ${{ env.PROJECT_DIR }}/target/
            ${{ env.PROJECT_DIR }}/recipe.json
            ~/.sccache
          key: ${{ runner.os }}-rust-${{ hashFiles(' ${{ env.PROJECT_DIR }}/Cargo.lock', ' ${{ env.PROJECT_DIR }}/recipe.json') }}
          restore-keys: |
            ${{ runner.os }}-rust-

      - name: Clear Docker buildx cache
        run: |
          docker buildx ls
          docker buildx prune -f
          rm -rf /tmp/.buildx-cache*

      # Docker Î†àÏù¥Ïñ¥ Ï∫êÏãú ÏµúÏ†ÅÌôî
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: latest
          buildkitd-flags: --debug
          driver-opts: |
            image=moby/buildkit:latest
            network=host

      - name: Check buildx status
        run: |
          docker buildx ls
          docker buildx inspect --bootstrap

      # Docker Î†àÏù¥Ïñ¥ Ï∫êÏãú ÏÑ§Ï†ï
      - name: Docker Layer Caching
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ env.PROJECT_NAME_SLASH }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ env.PROJECT_NAME_SLASH }}-

      - name: Log into registry docker hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # - name: Make envfile
      #   uses: SpicyPizza/create-envfile@v2.0
      #   with:
      #     envkey_DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres
      #     envkey_DIRECT_URL: postgres://postgres:postgres@localhost:5432/postgres
      #     file_name: .config

      - name: Get package info
        id: info
        uses: rabbitson87/get-cargo-package-info@v1
        with:
          directory: ${{ env.PROJECT_DIR }}
          package: |
            version

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            ${{ env.PROJECT_NAME }}_${{ fromJson(steps.info.outputs.object).package.version }}
            ${{ env.PROJECT_NAME }}_test
            ${{ env.PROJECT_NAME }}_latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        env:
          DOCKER_BUILDKIT: 1
          BUILDKIT_PROGRESS: plain
        with:
          context: .
          file: ./${{ env.PROJECT_DIR }}/Dockerfile
          push: ${{ github.event_name != 'pull_request' }} # Don't push on PR
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: |
            type=local,src=/tmp/.buildx-cache
            type=registry,ref=${{ env.IMAGE_NAME }}
          cache-to: |
            type=local,dest=/tmp/.buildx-cache-new,mode=max
          build-args: |
            CARGO_NET_GIT_FETCH_WITH_CLI=true
            RUST_BACKTRACE=1
            CARGO_INCREMENTAL=true
            RUSTC_WRAPPER=sccache
            PROJECT_DIR=${{ env.PROJECT_DIR }}
            PROJECT_NAME=${{ env.PROJECT_NAME }}

          outputs: type=docker

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
